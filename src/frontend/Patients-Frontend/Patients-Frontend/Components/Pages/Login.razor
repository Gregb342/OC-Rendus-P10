@page "/login"
@using Patients_Frontend.DTOs
@using Patients_Frontend.Services.Interfaces
@inject IAuthService AuthService

<div class="container-fluid min-vh-100 d-flex align-items-center justify-content-center bg-light">
    <div class="card shadow-lg" style="width: 100%; max-width: 400px;">
        <div class="card-body p-4">
            <div class="text-center mb-4">
                <i class="bi bi-person-circle display-4 text-primary"></i>
                <h2 class="card-title mt-2">Connexion</h2>
                <p class="text-muted">Connectez-vous à votre compte</p>
            </div>

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label for="username" class="form-label">Nom d'utilisateur</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-person"></i>
                        </span>
                        <InputText @bind-Value="loginModel.Username"
                                   class="form-control"
                                   id="username"
                                   placeholder="Entrez votre nom d'utilisateur" />
                    </div>
                    <ValidationMessage For="() => loginModel.Username" class="text-danger small" />
                </div>

                <div class="mb-4">
                    <label for="password" class="form-label">Mot de passe</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-lock"></i>
                        </span>
                        <InputText @bind-Value="loginModel.Password"
                                   type="password"
                                   class="form-control"
                                   id="password"
                                   placeholder="Entrez votre mot de passe" />
                    </div>
                    <ValidationMessage For="() => loginModel.Password" class="text-danger small" />
                </div>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert alert-danger d-flex align-items-center mb-3" role="alert">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        <div>@ErrorMessage</div>
                    </div>
                }

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary btn-lg" disabled="@IsLogging">
                        @if (IsLogging)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            <span>Connexion en cours...</span>
                        }
                        else
                        {
                            <i class="bi bi-box-arrow-in-right me-2"></i>
                            <span>Se connecter</span>
                        }
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

